server:
  requestLog:
    appenders:
        - type: console
          threshold: INFO
          timeZone: IST
  applicationConnectors:
    - type: http
      port: 8080
  adminConnectors:
    - type: http
      port: 8081

# Logging settings.
logging:
  level: INFO
  # Logger-specific levels.
  loggers:
    io.jwt.primer: DEBUG
  appenders:
    - type: console
      threshold: INFO
      timeZone: IST

swagger:
  resourcePackage: io.jwt.primer.resource
  title: Primer
  description: Low latency & interet scale JWT service

riemann:
  host: ${RIEMANN_HOST}
  port: ${RIEMANN_PORT}
  prefix: phonepe.${CONFIG_ENV}.primer
  pollingInterval: 30
  tags:
    - auth
    - primer

aerospike:
  hosts: ${AEROSPIKE_HOST}
  namespace: ${AEROSPIKE_NAMESPACE}
  maxConnectionsPerNode: ${AEROSPIKE_CONNECTION_PER_NODE}
  timeout: ${AEROSPIKE_TIMEOUT}
  retries: ${AEROSPIKE_RETRIES}
  sleepBetweenRetries: ${AEROSPIKE_SLEEP_BETWEEN_RETRIES}
  maxSocketIdle: ${AEROSPIKE_MAX_SOCKET_IDLE}

hystrix:
  defaultConfig:
    threadPool:
      timeout: 1000
  commands:
    - name: generate
      threadPool:
        timeout: 500
        concurrency: 16
    - name: disable
      threadPool:
        timeout: 500
        concurrency: 4
    - name: get_dynamic
      threadPool:
        timeout: 500
        concurrency: 16
    - name: generate_static
      threadPool:
        timeout: 500
        concurrency: 4
    - name: disable_static
      threadPool:
        timeout: 200
        concurrency: 4
    - name: get_static
      threadPool:
        timeout: 500
        concurrency: 16
    - name: refresh
      threadPool:
        timeout: 500
        concurrency: 16
    - name: expire
      threadPool:
        timeout: 500
        concurrency: 4
    - name: clear
      threadPool:
        timeout: 500
        concurrency: 4

jwt:
  privateKey: ${JWT_PRIVATE_KEY}
  clockSkew: ${JWT_CLOCK_SKEW}
  expiry: ${JWT_EXPIRY}

discovery:
  namespace: phonepe
  environment: ${CONFIG_ENV}
  zookeeper: ${ZK_CONNECTION_STRING}
  connectionRetryIntervalMillis: 1000
  publishedHost: ${HOST}
  publishedPort: ${PORT_8080}